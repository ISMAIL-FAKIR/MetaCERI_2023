{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport io from 'socket.io-client';\nexport let HomeComponent = class HomeComponent {\n  constructor(notificationService, router, postsService) {\n    this.notificationService = notificationService;\n    this.router = router;\n    this.postsService = postsService;\n    this.successMessage = null;\n    this.shareMessage = null;\n    this.posts = [];\n    this.currentPage = 1;\n    this.totalPages = 1;\n    this.hashtagToFilter = '';\n  }\n  logout() {\n    this.notificationService.showLogoutMessage('Déconnexion réussie, By By !');\n    localStorage.removeItem('lastLoginTime');\n    this.router.navigate(['/login']);\n  }\n  loadPosts(page) {\n    this.postsService.getPosts(page).subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = page;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error loading posts', error);\n    });\n  }\n  likePost(post) {\n    this.postsService.likePost(post._id).subscribe(() => {\n      this.loadPosts(this.currentPage);\n    });\n    // Notify user about the like\n    this.notificationService.showLikeMessage('Post aimé avec succès!');\n  }\n  // ajouter un commentaire\n  addComment(postId, commentText) {\n    this.postsService.addComment(postId, commentText).subscribe(() => {\n      this.loadPosts(this.currentPage);\n    }, error => {\n      console.error('Error adding comment', error);\n    });\n    // Notify user about the comment\n    this.notificationService.showCommentMessage('Commentaire ajouté avec succès!');\n  }\n  toggleComments(post) {\n    post.showComments = !post.showComments;\n  }\n  //partager un post\n  sharePost(post) {\n    const username = 'Lionel10';\n    // Appelez le backend pour partager le post\n    this.postsService.sharePost(post._id, username).subscribe(() => {\n      this.loadPosts(this.currentPage);\n      // Notify user about the successful share\n      this.notificationService.showShareMessage('Post partagé avec succès!');\n    }, error => {\n      console.error('Error sharing post', error);\n    });\n  }\n  //filtrer par hashtags\n  filterByHashtag() {\n    this.postsService.filterByHashtag(this.hashtagToFilter).subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = data.posts.length;\n    }, error => {\n      console.error('Error filtering posts by hashtag', error);\n    });\n  }\n  //filtrer par mes posts\n  filterByUser() {\n    this.postsService.filterUserPosts().subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = data.posts.length;\n    }, error => {\n      console.error('Error filtering posts by user', error);\n    });\n  }\n  //Trie par popularité\n  sortPostsByPopularity() {\n    this.postsService.sortPostsByPopularity(this.currentPage).subscribe(data => {\n      this.posts = data.sortedPosts;\n      this.currentPage = 1;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error sorting posts by popularity', error);\n    });\n  }\n  //Trie par date\n  sortPostsByDate() {\n    this.postsService.sortPostsByDate(this.currentPage).subscribe(data => {\n      this.posts = data.sortedPosts;\n      this.currentPage = 1;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error sorting posts by date', error);\n    });\n  }\n  ngOnInit() {\n    this.socket = io('https://pedago.univ-avignon.fr:3155');\n    this.socket.on('likes', updatedPost => {\n      console.log('Received updated post:', updatedPost);\n    });\n    this.notificationService.successMessage$.subscribe(statusMsg => {\n      this.successMessage = statusMsg;\n      //la dernière connexion dans le service de notification\n      this.notificationService.setLastLoginTime();\n    });\n    this.notificationService.getPosts().subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = 120;\n    });\n    this.notificationService.shareMessage$.subscribe(statusMsg => {\n      this.shareMessage = statusMsg;\n    });\n    // Fetch initial posts using getPosts method\n    this.postsService.getPosts(1).subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error loading initial posts', error);\n    });\n    // Load initial posts\n    this.loadPosts(1);\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}