{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport io from 'socket.io-client';\nexport let HomeComponent = class HomeComponent {\n  toggleFilterMenu() {\n    this.showFilterMenu = !this.showFilterMenu;\n    // Hide the sort menu when showing the filter menu\n    this.showSortMenu = false;\n  }\n  toggleSortMenu() {\n    this.showSortMenu = !this.showSortMenu;\n    // Hide the filter menu when showing the sort menu\n    this.showFilterMenu = false;\n  }\n  constructor(notificationService, router, postsService) {\n    this.notificationService = notificationService;\n    this.router = router;\n    this.postsService = postsService;\n    this.successMessage = null;\n    this.posts = [];\n    this.currentPage = 1;\n    this.totalPages = 1;\n    // New properties for filtering\n    this.filterByOwner = null;\n    this.filterByHashtag = null;\n    this.showFilterMenu = false;\n    this.showSortMenu = false;\n  }\n  logout() {\n    this.notificationService.showLogoutMessage('Déconnexion réussie, By By !');\n    localStorage.removeItem('lastLoginTime');\n    this.router.navigate(['/login']);\n  }\n  loadPosts(page) {\n    this.postsService.getPosts(page).subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = page;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error loading posts', error);\n    });\n  }\n  likePost(post) {\n    this.postsService.likePost(post._id).subscribe(() => {\n      this.loadPosts(this.currentPage);\n    });\n  }\n  // ajouter un commentaire\n  addComment(post, newComment, username) {\n    this.postsService.addComment(post._id, newComment, username).subscribe(data => {\n      console.log('Comment added successfully:', data);\n      this.loadPosts(this.currentPage);\n    }, error => {\n      console.error('Error adding comment', error);\n    });\n  }\n  toggleComments(post) {\n    post.showComments = !post.showComments;\n  }\n  ngOnInit() {\n    this.socket = io(\"https://pedago.univ-avignon.fr:3155\");\n    this.socket.on('likes', updatedPost => {\n      console.log('Received updated post:', updatedPost);\n    });\n    this.notificationService.successMessage$.subscribe(statusMsg => {\n      this.successMessage = statusMsg;\n      //la dernière connexion dans le service de notification\n      this.notificationService.setLastLoginTime();\n    });\n    this.notificationService.getPosts().subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = 30;\n    });\n  }\n  // trois méthodes pour trier les messages\n  sortByOwner() {\n    this.posts.sort((a, b) => a.creator > b.creator ? 1 : -1);\n  }\n  sortByDate() {\n    this.posts.sort((a, b) => a.date > b.date ? 1 : -1);\n  }\n  sortByPopularity() {\n    this.posts.sort((a, b) => a.likes < b.likes ? 1 : -1);\n  }\n  // Method to filter posts based on owner\n  filterByOwnerHandler(owner) {\n    this.filterByOwner = owner === 'me' ? this.notificationService.getUsername() : owner;\n    this.filterByHashtag = null; // Reset hashtag filter\n    this.applyFilters();\n  }\n  // Method to filter posts based on hashtag\n  filterByHashtagHandler(hashtag) {\n    if (hashtag !== null) {\n      this.filterByHashtag = hashtag;\n      this.filterByOwner = null; // Reset owner filter\n      this.applyFilters();\n    }\n  }\n  // Method to apply filters and load filtered posts\n  applyFilters() {\n    this.postsService.filterPosts(this.filterByOwner, this.filterByHashtag).subscribe(data => {\n      this.posts = data.posts;\n      this.currentPage = 1;\n      this.totalPages = data.totalPages;\n    }, error => {\n      console.error('Error filtering posts', error);\n    });\n  }\n};\nHomeComponent = __decorate([Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})], HomeComponent);","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}